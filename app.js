/* This file had been auto generated by WebStorm and had been adjusted to fit our needs */

"use strict";

const createError = require('http-errors');
const express = require('express');
const path = require('path');
const cookieParser = require('cookie-parser');
const favicon = require('serve-favicon');

const logger = require('./config/logger');
const flash = require('connect-flash');
const passport = require('passport');
const session = require('express-session');
const mongoose = require('mongoose');
const MongoStore = require('connect-mongo')(session);
const MongodbMemoryServer = require('mongodb-memory-server');

const indexRouter = require('./routes/index');
const registerRouter = require('./routes/register');
const authenticateRouter = require('./routes/authenticate');

const app = express();

// connection to local non-persistent mongodb
mongoose.Promise = Promise;
const mongoServer = new MongodbMemoryServer.MongoMemoryServer();
mongoServer.getConnectionString().then((uri) => {
    const options = {
        autoReconnect: true,
        reconnectTries: Number.MAX_VALUE,
        reconnectInterval: 1000,
        useNewUrlParser: true
    };

    mongoose.connect(uri, options);

    mongoose.connection.on('error', (e) => {
        logger.error(e);
    });

    mongoose.connection.once('open', () => {
        logger.info('Connection to local non-persistent database established');
    });
});


// view engine setup
app.set('views', path.join(__dirname, 'views'));
app.set('view engine', 'ejs');

// session
app.use(session({
    secret: 'Erfolg ist kein Glück, sondern nur das Ergebnis von Blut, Schweiß und Tränen - Das Leben zahlt alles mal zurück - Es kommt nur ganz darauf an, was du bist - Schatten oder Licht! - Kontra K',
    resave: false,
    saveUninitialized: true,
    store: new MongoStore({mongooseConnection: mongoose.connection}),
    cookie: {
        secure: true,
        httpOnly: true,
        maxAge: 60 * 60 * 1000
    }, // 60 min
    rolling: true
}));

// flash for displaying messages to the user
app.use(flash());

app.use(function (req, res, next) {
    res.locals.success_msg = req.flash('success_msg');
    res.locals.error_msg = req.flash('error_msg');
    next();
});

// passport initialization
app.use(passport.initialize());
app.use(passport.session());

app.use(express.static(path.join(__dirname, 'public')));
app.use(favicon(path.join(__dirname, 'public', 'images', 'favicon.ico')));

// logging requests
app.use(function (req, res, next) {
    logger.info(req.method + req.url);
    next();
});

app.use(express.json());
app.use(express.urlencoded({extended: false}));
app.use(cookieParser());

app.set('json spaces', 4);

app.use(indexRouter);
app.use(authenticateRouter);
app.use(registerRouter);

// catch 404 and forward to error handler
app.use(function (req, res, next) {
    next(createError(404));
});

// error handler
app.use(function (err, req, res, next) {
    res.locals.error = err.message;
    res.status(err.status || 500);
    res.render('error', {title: 'Error', csrf: req.csrfToken()});

});

module.exports = app;